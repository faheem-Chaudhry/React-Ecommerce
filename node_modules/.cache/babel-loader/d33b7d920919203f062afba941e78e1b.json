{"ast":null,"code":"var _jsxFileName = \"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useState } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  // if (action.type === 'ADD') {\n  //   const updatedTotalAmount =\n  //     state.totalAmount + action.item.price * action.item.amount;\n\n  //   const existingCartItemIndex = state.items.findIndex(\n  //     (item) => item.id === action.item.id\n  //   );\n  //   const existingCartItem = state.items[existingCartItemIndex];\n  //   let updatedItems;\n\n  //   if (existingCartItem) {\n  //     const updatedItem = {\n  //       ...existingCartItem,\n  //       amount: existingCartItem.amount + action.item.amount,\n  //     };\n  //     updatedItems = [...state.items];\n  //     updatedItems[existingCartItemIndex] = updatedItem;\n  //   } else {\n  //     updatedItems = state.items.concat(action.item);\n  //   }\n\n  //   return {\n  //     items: updatedItems,\n  //     totalAmount: updatedTotalAmount,\n  //   };\n  // }\n  // if (action.type === 'REMOVE') {\n  //   const existingCartItemIndex = state.items.findIndex(\n  //     (item) => item.id === action.id\n  //   );\n  //   const existingItem = state.items[existingCartItemIndex];\n  //   const updatedTotalAmount = state.totalAmount - existingItem.price;\n  //   let updatedItems;\n  //   if (existingItem.amount === 1) {\n  //     updatedItems = state.items.filter(item => item.id !== action.id);\n  //   } else {\n  //     const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n  //     updatedItems = [...state.items];\n  //     updatedItems[existingCartItemIndex] = updatedItem;\n  //   }\n\n  //   return {\n  //     items: updatedItems,\n  //     totalAmount: updatedTotalAmount\n  //   };\n  // }\n\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [totalAmount, setTotalAmount] = useState();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = (item, amount) => {\n    setCartItems(prevCartItems => [...prevCartItems, item]);\n    setTotalAmount(prevAmount => prevAmount + amount);\n    console.log(cartItems);\n    console.log(totalAmount);\n    // dispatchCartAction({ type: 'ADD', item: item });\n  };\n\n  // const removeItemFromCartHandler = (id) => {\n  //   dispatchCartAction({ type: 'REMOVE', id: id });\n  // };\n\n  const cartContext = {\n    items: cartItems,\n    totalAmount: totalAmount,\n    addItem: addItemToCartHandler\n    // removeItem: removeItemFromCartHandler,\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"zIeHLF3gvqTa1zqX5SJkVilvi0s=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","useState","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","CartProvider","props","_s","cartItems","setCartItems","setTotalAmount","cartState","dispatchCartAction","addItemToCartHandler","item","amount","prevCartItems","prevAmount","console","log","cartContext","addItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/store/CartProvider.js"],"sourcesContent":["import { useReducer, useState } from 'react';\n\nimport CartContext from './cart-context';\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  // if (action.type === 'ADD') {\n  //   const updatedTotalAmount =\n  //     state.totalAmount + action.item.price * action.item.amount;\n\n  //   const existingCartItemIndex = state.items.findIndex(\n  //     (item) => item.id === action.item.id\n  //   );\n  //   const existingCartItem = state.items[existingCartItemIndex];\n  //   let updatedItems;\n\n  //   if (existingCartItem) {\n  //     const updatedItem = {\n  //       ...existingCartItem,\n  //       amount: existingCartItem.amount + action.item.amount,\n  //     };\n  //     updatedItems = [...state.items];\n  //     updatedItems[existingCartItemIndex] = updatedItem;\n  //   } else {\n  //     updatedItems = state.items.concat(action.item);\n  //   }\n\n  //   return {\n  //     items: updatedItems,\n  //     totalAmount: updatedTotalAmount,\n  //   };\n // }\n  // if (action.type === 'REMOVE') {\n  //   const existingCartItemIndex = state.items.findIndex(\n  //     (item) => item.id === action.id\n  //   );\n  //   const existingItem = state.items[existingCartItemIndex];\n  //   const updatedTotalAmount = state.totalAmount - existingItem.price;\n  //   let updatedItems;\n  //   if (existingItem.amount === 1) {\n  //     updatedItems = state.items.filter(item => item.id !== action.id);\n  //   } else {\n  //     const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n  //     updatedItems = [...state.items];\n  //     updatedItems[existingCartItemIndex] = updatedItem;\n  //   }\n\n  //   return {\n  //     items: updatedItems,\n  //     totalAmount: updatedTotalAmount\n  //   };\n  // }\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartItems, setCartItems] = useState([]);\n  const [totalAmount, setTotalAmount] = useState();\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item, amount) => {\n    setCartItems((prevCartItems) => [...prevCartItems, item]);\n    setTotalAmount((prevAmount) => prevAmount + amount)\n    console.log(cartItems)\n    console.log(totalAmount)\n    // dispatchCartAction({ type: 'ADD', item: item });\n  };\n\n  // const removeItemFromCartHandler = (id) => {\n  //   dispatchCartAction({ type: 'REMOVE', id: id });\n  // };\n\n  const cartContext = {\n    items: cartItems,\n    totalAmount: totalAmount,\n    addItem: addItemToCartHandler,\n    // removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAE5C,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACD;EACC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,OAAOL,gBAAgB;AACzB,CAAC;AAED,MAAMM,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACM,WAAW,EAAES,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC;EAChD,MAAM,CAACgB,SAAS,EAAEC,kBAAkB,CAAC,GAAGlB,UAAU,CAChDQ,WAAW,EACXH,gBACF,CAAC;EAED,MAAMc,oBAAoB,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAK;IAC7CN,YAAY,CAAEO,aAAa,IAAK,CAAC,GAAGA,aAAa,EAAEF,IAAI,CAAC,CAAC;IACzDJ,cAAc,CAAEO,UAAU,IAAKA,UAAU,GAAGF,MAAM,CAAC;IACnDG,OAAO,CAACC,GAAG,CAACX,SAAS,CAAC;IACtBU,OAAO,CAACC,GAAG,CAAClB,WAAW,CAAC;IACxB;EACF,CAAC;;EAED;EACA;EACA;;EAEA,MAAMmB,WAAW,GAAG;IAClBpB,KAAK,EAAEQ,SAAS;IAChBP,WAAW,EAAEA,WAAW;IACxBoB,OAAO,EAAER;IACT;EACF,CAAC;;EAED,oBACEf,OAAA,CAACF,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAEH,WAAY;IAAAI,QAAA,EACtClB,KAAK,CAACkB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAACrB,EAAA,CAhCIF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}