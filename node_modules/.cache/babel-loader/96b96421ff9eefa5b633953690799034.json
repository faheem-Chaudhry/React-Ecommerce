{"ast":null,"code":"var _jsxFileName = \"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useState } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [email, setEmail] = useState('');\n  const addItemToCartHandler = (item, amount) => {\n    const existingCartItemIndex = cartItems.findIndex(item => item.id === item.id);\n    const existingCartItem = cartItems[existingCartItemIndex];\n    if (existingCartItem) {\n      let updatedItems;\n      const updatedItem = {\n        ...existingCartItem,\n        quantity: existingCartItem.quantity + item.quantity\n      };\n      updatedItems = [...cartItems];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      setCartItems(prevCartItems => [...prevCartItems, item]);\n      setTotalAmount(prevAmount => prevAmount + amount);\n    }\n    console.log(cartItems);\n    console.log(totalAmount);\n    // dispatchCartAction({ type: 'ADD', item: item });\n  };\n\n  const addEmailHandler = email => {\n    setEmail(email);\n  };\n  const cartContext = {\n    items: cartItems,\n    totalAmount: totalAmount,\n    email: email,\n    addItem: addItemToCartHandler,\n    addEmail: addEmailHandler\n    // removeItem: removeItemFromCartHandler,\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"nChmxBYwH8ppLSBssMeriPo0rAc=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","useState","CartContext","jsxDEV","_jsxDEV","CartProvider","props","_s","cartItems","setCartItems","totalAmount","setTotalAmount","email","setEmail","addItemToCartHandler","item","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","quantity","prevCartItems","prevAmount","console","log","addEmailHandler","cartContext","items","addItem","addEmail","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/store/CartProvider.js"],"sourcesContent":["import { useReducer, useState } from 'react';\n\nimport CartContext from './cart-context';\n\n\n\nconst CartProvider = (props) => {\n  const [cartItems, setCartItems] = useState([]);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [email, setEmail] = useState('')\n\n\n  const addItemToCartHandler = (item, amount) => {\n    const existingCartItemIndex = cartItems.findIndex(\n      (item) => item.id === item.id\n    );\n    const existingCartItem = cartItems[existingCartItemIndex];\n    if (existingCartItem) {\n      let updatedItems;\n      const updatedItem = {\n        ...existingCartItem,\n        quantity: existingCartItem.quantity + item.quantity\n      };\n      updatedItems = [...cartItems];\n      updatedItems[existingCartItemIndex] = updatedItem;\n      \n    }\n    else {\n      setCartItems((prevCartItems) => [...prevCartItems, item]);\n      setTotalAmount((prevAmount) => prevAmount + amount)\n    }\n\n    console.log(cartItems)\n    console.log(totalAmount)\n    // dispatchCartAction({ type: 'ADD', item: item });\n  };\n\n  const addEmailHandler = (email) => {\n    setEmail(email);\n  }\n\n  const cartContext = {\n    items: cartItems,\n    totalAmount: totalAmount,\n    email: email,\n    addItem: addItemToCartHandler,\n    addEmail: addEmailHandler\n    // removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAE5C,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIzC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAGtC,MAAMa,oBAAoB,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAK;IAC7C,MAAMC,qBAAqB,GAAGT,SAAS,CAACU,SAAS,CAC9CH,IAAI,IAAKA,IAAI,CAACI,EAAE,KAAKJ,IAAI,CAACI,EAC7B,CAAC;IACD,MAAMC,gBAAgB,GAAGZ,SAAS,CAACS,qBAAqB,CAAC;IACzD,IAAIG,gBAAgB,EAAE;MACpB,IAAIC,YAAY;MAChB,MAAMC,WAAW,GAAG;QAClB,GAAGF,gBAAgB;QACnBG,QAAQ,EAAEH,gBAAgB,CAACG,QAAQ,GAAGR,IAAI,CAACQ;MAC7C,CAAC;MACDF,YAAY,GAAG,CAAC,GAAGb,SAAS,CAAC;MAC7Ba,YAAY,CAACJ,qBAAqB,CAAC,GAAGK,WAAW;IAEnD,CAAC,MACI;MACHb,YAAY,CAAEe,aAAa,IAAK,CAAC,GAAGA,aAAa,EAAET,IAAI,CAAC,CAAC;MACzDJ,cAAc,CAAEc,UAAU,IAAKA,UAAU,GAAGT,MAAM,CAAC;IACrD;IAEAU,OAAO,CAACC,GAAG,CAACnB,SAAS,CAAC;IACtBkB,OAAO,CAACC,GAAG,CAACjB,WAAW,CAAC;IACxB;EACF,CAAC;;EAED,MAAMkB,eAAe,GAAIhB,KAAK,IAAK;IACjCC,QAAQ,CAACD,KAAK,CAAC;EACjB,CAAC;EAED,MAAMiB,WAAW,GAAG;IAClBC,KAAK,EAAEtB,SAAS;IAChBE,WAAW,EAAEA,WAAW;IACxBE,KAAK,EAAEA,KAAK;IACZmB,OAAO,EAAEjB,oBAAoB;IAC7BkB,QAAQ,EAAEJ;IACV;EACF,CAAC;;EAED,oBACExB,OAAA,CAACF,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAEL,WAAY;IAAAM,QAAA,EACtC7B,KAAK,CAAC6B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAAChC,EAAA,CAjDIF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAmDlB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}