[{"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/index.js":"1","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/App.js":"2","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Home.js":"3","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Header.js":"4","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Categories/Categories.js":"5","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Categories/AddCategories.js":"6","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Categories/UpdateCategory.js":"7","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Products/Products.js":"8","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Products/AddProduct.js":"9","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Products/UpdateProduct.js":"10","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Login.js":"11","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/LoginPage.js":"12","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/SignUp.js":"13","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/store/CartProvider.js":"14","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/store/cart-context.js":"15","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Cart.js":"16","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/ShowNotSIgnIn.js":"17","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Orders.js":"18","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/SuccessOrder.js":"19"},{"size":142,"mtime":1616592305000,"results":"20","hashOfConfig":"21"},{"size":1431,"mtime":1691397338441,"results":"22","hashOfConfig":"21"},{"size":6042,"mtime":1691397581255,"results":"23","hashOfConfig":"21"},{"size":2168,"mtime":1691396866954,"results":"24","hashOfConfig":"21"},{"size":4224,"mtime":1691142278964,"results":"25","hashOfConfig":"21"},{"size":1856,"mtime":1690871643897,"results":"26","hashOfConfig":"21"},{"size":1831,"mtime":1690898145048,"results":"27","hashOfConfig":"21"},{"size":6279,"mtime":1691147619536,"results":"28","hashOfConfig":"21"},{"size":2958,"mtime":1691147864206,"results":"29","hashOfConfig":"21"},{"size":2329,"mtime":1690971734153,"results":"30","hashOfConfig":"21"},{"size":3033,"mtime":1691397847293,"results":"31","hashOfConfig":"21"},{"size":2717,"mtime":1690973879328,"results":"32","hashOfConfig":"21"},{"size":2340,"mtime":1690958645925,"results":"33","hashOfConfig":"21"},{"size":1663,"mtime":1691071064461,"results":"34","hashOfConfig":"21"},{"size":223,"mtime":1691070951274,"results":"35","hashOfConfig":"21"},{"size":3232,"mtime":1691394781176,"results":"36","hashOfConfig":"21"},{"size":454,"mtime":1691063708223,"results":"37","hashOfConfig":"21"},{"size":5262,"mtime":1691398908333,"results":"38","hashOfConfig":"21"},{"size":338,"mtime":1691066069013,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"wr0gzi",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/index.js",[],["86","87"],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/App.js",[],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Home.js",["88","89"],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Header.js",[],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Categories/Categories.js",[],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Categories/AddCategories.js",[],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Categories/UpdateCategory.js",["90"],"import React, {useEffect, useState} from \"react\";\n\nconst UpdateCategory = (props) =>{\n    const [Name, setName] = useState('');\n    useEffect(()=>{\n        console.log(props.catName,props.catId)\n        setName(props.catName)\n    },[])\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'id') {\n        //    setId(value);\n        } else if (name === 'Name') {\n            setName(value);\n        }\n    };\n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        fetch(`https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/categories/${props.catId}.json`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(Name),\n          }).then(()=>{\n            setName('');\n            props.updateState(false);\n          })\n    }\n    return(\n        <React.Fragment>\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"id\">ID:</label>\n                <input\n                    type=\"text\"\n                    id=\"id\"\n                    name=\"id\"\n                    value={props.catId}\n                    onChange={handleInputChange}\n                    readOnly\n                />\n            </div>\n            <div>\n                <label htmlFor=\"Name\">Category Name:</label>\n                <input\n                    type=\"Name\"\n                    id=\"Name\"\n                    name=\"Name\"\n                    value={Name}\n                    onChange={handleInputChange}\n                    required\n                />\n            </div>\n            <div>\n                <button type=\"submit\">Update</button>\n            </div>\n        </form>\n    </React.Fragment>\n    )\n}\n\nexport default UpdateCategory","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Products/Products.js",["91","92","93"],"import React, { useEffect, useState } from \"react\";\nimport AddProduct from \"./AddProduct\";\nimport UpdateProduct from \"./UpdateProduct\";\n\nconst Products = (props) => {\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [cateButton, setcateButton] = useState(false);\n  const [updateCategories, setupdateCategories] = useState(false);\n  const [updateItem, setUpdateItem] = useState({\n    id: \"\",\n    name: \"\",\n    price: \"\",\n    image: \"\",\n    category: \"\",\n  });\n  const [isdelete, setIsDelete] = useState(false);\n  const [sureDelete, setSureDelete] = useState(false);\n  const [sureDelete2, setSureDelete2] = useState(false);\n  const [deleteId, setDeleteId] = useState('')\n  useEffect(() => {\n    async function fetchDataCategories() {\n      setIsDelete(false);\n      const response = await fetch(\n        \"https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/categories.json\"\n      );\n      const data = await response.json();\n      const DATA = [];\n      for (const key in data) {\n        DATA.push({\n          id: key,\n          name: data[key],\n        });\n      }\n      setCategories(DATA);\n    }\n    fetchDataCategories();\n\n    //-----------------------------------Products-------------------------------\n\n    async function fetchData() {\n      setIsDelete(false);\n      const response = await fetch(\n        \"https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/products.json\"\n      );\n      const data = await response.json();\n      const DATA = [];\n      for (const key in data) {\n        DATA.push({\n          id: key,\n          name: data[key].name,\n          image: data[key].image,\n          price: data[key].price,\n          category: data[key].category,\n        });\n      }\n      setProducts(DATA);\n    }\n    fetchData();\n  }, [cateButton, updateCategories, isdelete]);\n  const addCategoriesHandler = () => {\n    setcateButton(true);\n  };\n  const handleDelete = (catId) => {\n    setSureDelete(true);\n    setDeleteId(catId);\n    // if (sureDelete2 === true) {\n    //   fetch(\n    //     `https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/products/${catId}.json`,\n    //     {\n    //       method: \"DELETE\",\n    //     }\n    //   ).then(() => setIsDelete(true));\n    //   setSureDelete2(false);\n    //   setSureDelete(false)\n    // }\n    // else{\n    //  //   setSureDelete(false);\n    // }\n  };\n  const handleUpdate = (id, name, price, image, category) => {\n    console.log(\"update\", id, name);\n    setUpdateItem({\n      id: id,\n      name: name,\n      price: price,\n      image: image,\n      category: category,\n    });\n    setupdateCategories(true);\n  };\n\n  const handleChange = (event) => {\n    console.log(event.target.value);\n    async function fetchData() {\n      setIsDelete(false);\n      const response = await fetch(\n        \"https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/products.json\"\n      );\n      const data = await response.json();\n      const DATA = [];\n      if (event.target.value === \"All\") {\n        for (const key in data) {\n          DATA.push({\n            name: data[key].name,\n            image: data[key].image,\n            price: data[key].price,\n            category: data[key].category,\n          });\n        }\n      }\n      for (const key in data) {\n        if (data[key].category === event.target.value) {\n          DATA.push({\n            name: data[key].name,\n            image: data[key].image,\n            price: data[key].price,\n            category: data[key].category,\n          });\n        }\n      }\n      setProducts(DATA);\n    }\n    fetchData();\n  };\n  const sureDeleteHandler = () => {\n    fetch(\n      `https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/products/${deleteId}.json`,\n      {\n        method: \"DELETE\",\n      }\n    ).then(() => setIsDelete(true));\n   // setSureDelete2(false);\n    setSureDelete(false)\n //   setSureDelete2(true);\n    \n  };\n  const cancelDeleteHandler = () => {\n  //  setSureDelete2(false);\n    setSureDelete(false)\n  };\n  return (\n    <React.Fragment>\n         {sureDelete && (\n                  <div>\n                    <p>Are you sure to want to delete</p>\n                    <button onClick={sureDeleteHandler}>yes</button>\n                    <button onClick={cancelDeleteHandler}>no</button>\n                  </div>\n                )}\n      {cateButton && <AddProduct categories={categories} setCatButton={setcateButton} />}\n      <select onChange={handleChange}>\n        <option value=\"All\">All</option>\n        {categories.map((option) => (\n          <option key={option.name} value={option.name}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      <table>\n        <tr>\n          <th>Name</th>\n          <th>Price</th>\n          <th>Category</th>\n          <th>Image</th>\n          <th>delete</th>\n          <th>update</th>\n        </tr>\n        <tbody>\n          {products.map((cat) => {\n            return (\n              <tr>\n                <td>{cat.name}</td>\n                <td>{cat.price}</td>\n                <td>{cat.category}</td>\n                <td>\n                  <img height=\"100px\" width=\"200px\" src={cat.image} />\n                </td>\n                <td>\n                  <button onClick={() => handleDelete(cat.id)}>Delete</button>\n                </td>\n               \n                <td>\n                  <button\n                    onClick={() =>\n                      handleUpdate(\n                        cat.id,\n                        cat.name,\n                        cat.price,\n                        cat.image,\n                        cat.category\n                      )\n                    }\n                  >\n                    Update\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <button onClick={addCategoriesHandler}>Add Products</button>\n      {updateCategories && (\n        <UpdateProduct\n          catId={updateItem.id}\n          catName={updateItem.name}\n          catPrice={updateItem.price}\n          catImage={updateItem.image}\n          catCategory={updateItem.category}\n          updateState={setupdateCategories}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Products;\n","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Products/AddProduct.js",[],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Products/UpdateProduct.js",["94"],"import React, {useState, useEffect} from \"react\";\n\nconst UpdateProduct = (props) =>{\n    const [Name, setName] = useState('');\n    const [Price, setPrice] = useState('');\n    useEffect(()=>{\n        console.log(props.catName,props.catId)\n        setName(props.catName)\n        setPrice(props.catPrice)\n    },[])\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'Price') {\n            setPrice(value);\n        } else if (name === 'Name') {\n            setName(value);\n        }\n    };\n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        fetch(`https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/products/${props.catId}.json`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({name:Name, price: Price, image: props.catImage, category: props.catCategory}),\n          }).then(()=>{\n            setName('');\n            props.updateState(false);\n          })\n    }\n    return(\n        <React.Fragment>\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"id\">ID:</label>\n                <input\n                    type=\"text\"\n                    id=\"id\"\n                    name=\"id\"\n                    value={props.catId}\n                    onChange={handleInputChange}\n                    readOnly\n                />\n            </div>\n            <div>\n                <label htmlFor=\"Name\">Product Name:</label>\n                <input\n                    type=\"text\"\n                    id=\"Name\"\n                    name=\"Name\"\n                    value={Name}\n                    onChange={handleInputChange}\n                    required\n                />\n            </div>\n            <div>\n                <label htmlFor=\"Price\">Product Price:</label>\n                <input\n                    type=\"Text\"\n                    id=\"Price\"\n                    name=\"Price\"\n                    value={Price}\n                    onChange={handleInputChange}\n                    required\n                />\n            </div>\n            <div>\n                <button type=\"submit\">Update</button>\n            </div>\n        </form>\n    </React.Fragment>\n    )\n}\n\nexport default UpdateProduct","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Login.js",["95"],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/LoginPage.js",["96"],"import React, { useState, useEffect } from 'react';\n\nconst LoginPage = (props) => {\n  // let email;\n  // let pass;\n  // useEffect(() => {\n\n  //   async function fetchData() {\n  //     const response = await fetch('https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/admin.json');\n  //     const data = await response.json();\n  //     email = data['email'];\n  //     pass = data['password'];\n  //     console.log(email)\n\n  //   }\n  //   fetchData()\n  // }, [])\n  // State to hold the user input for username and password\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Event handler for input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    if (name === 'username') {\n      setUsername(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  // Event handler for form submission\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let email;\n    let pass;\n    async function fetchData() {\n      const response = await fetch('https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/admin.json');\n      const data = await response.json();\n      email=data['email'];\n      pass=data['password'];\n      console.log(email)\n\n    }\n    fetchData().then(()=>{\n      console.log('Username:', username);\n      console.log('Password:', password);\n      console.log('email from server:', email);\n      console.log('Password from server:', pass);\n      if (email === username && pass === password) {\n        console.log('ok');\n        props.setIsLogin(false);\n      }\n      else {\n        console.log('not ok');\n       // props.setIsLogin(false);\n      }\n      setUsername('');\n      setPassword('');\n    })\n   \n\n  };\n  const loginHandler = () =>{\n    props.adminLogin(false)\n  }\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <h2>Welcome to admin panel</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={username}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <button type=\"submit\">Login</button>\n          <button onClick={loginHandler}>Login as user</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/SignUp.js",["97","98"],"import React, { useEffect, useState } from \"react\";\n\nconst SignUp = (props) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    // Event handler for input changes\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'username') {\n            setUsername(value);\n        } else if (name === 'password') {\n            setPassword(value);\n        }\n    };\n\n    // Event handler for form submission\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        fetch('https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/users.json', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: username,\n                password: password\n            }),\n        }).then(() => {\n            setUsername('');\n            setPassword('');\n            props.isSignUp(false);\n           \n        })\n\n\n\n    };\n    const handleChange = () => {\n        props.setAdminLogin(true);\n    }\n    const loginHandler = () => {\n        props.isSignUp(false)\n    }\n    return (\n        <div>\n            <h2>SignUp </h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"username\">Username:</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        name=\"username\"\n                        value={username}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\">SignUp</button>\n                    <button onClick={loginHandler}>Login</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default SignUp","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/store/CartProvider.js",["99"],"import { useReducer, useState } from 'react';\n\nimport CartContext from './cart-context';\n\n\n\nconst CartProvider = (props) => {\n  const [cartItems, setCartItems] = useState([]);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [email, setEmail] = useState('')\n\n\n  const addItemToCartHandler = (item, amount) => {\n    console.log(item.id)\n    const existingCartItemIndex = cartItems.findIndex(\n      (Item) => Item.id === item.id\n    );\n    const existingCartItem = cartItems[existingCartItemIndex];\n    if (existingCartItem) {\n      let updatedItems;\n      const updatedItem = {\n        ...existingCartItem,\n        quantity: existingCartItem.quantity + item.quantity\n      };\n      updatedItems = [...cartItems];\n      updatedItems[existingCartItemIndex] = updatedItem;\n      setCartItems(updatedItems)\n      setTotalAmount((prevAmount) => prevAmount + amount)\n    }\n    else {\n      setCartItems((prevCartItems) => [...prevCartItems, item]);\n      setTotalAmount((prevAmount) => prevAmount + amount)\n    }\n\n    console.log(cartItems)\n    console.log(totalAmount)\n    // dispatchCartAction({ type: 'ADD', item: item });\n  };\n\n  const addEmailHandler = (email) => {\n    setEmail(email);\n  }\n  const resetHandler = () =>{\n    setCartItems([])\n      setTotalAmount(0)\n  }\n  const cartContext = {\n    items: cartItems,\n    totalAmount: totalAmount,\n    email: email,\n    addItem: addItemToCartHandler,\n    addEmail: addEmailHandler,\n    reset: resetHandler\n    // removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/store/cart-context.js",[],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Cart.js",["100"],"import React, { useContext,useState } from \"react\";\nimport CartContext from \"../store/cart-context\";\n\nconst Cart = (props) => {\n    const [successMessegeState, setSuccessMessegeState] = useState(false)\n    const cartCtx = useContext(CartContext);\n    const closeCartHandler = () => {\n        props.showCart(false);\n        props.setSuccessMessege(false);\n        setSuccessMessegeState(true)\n    }\n    const orderCartHandler = (event) => {\n        event.preventDefault();\n        if (cartCtx.email === '') {\n            console.log('if')\n            props.setNotSignIn(true);\n            props.showCart(false);\n            props.setSuccessMessege(false);\n        }\n        else {\n            console.log('else');\n            const Items = [];\n            cartCtx.items.map((cat) => {\n                return (\n                    Items.push({\n                        name: cat.name,\n                        price: cat.price,\n                        image: cat.image,\n                        quantity: cat.quantity\n                    })\n                )\n            });\n            fetch('https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/orders.json', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    email: cartCtx.email,\n                    grandTotal: cartCtx.totalAmount,\n                    details: Items.map((cat) => ({\n                        name: cat.name,\n                        price: cat.price,\n                        image: cat.image,\n                        quantity: cat.quantity\n                    }))\n\n                }),\n            }).then(() => {\n                props.showCart(false);\n                props.cartToLogin(false);\n                if(successMessegeState === false){\n                props.setSuccessMessege(true);\n                cartCtx.reset();\n                props.setCartCount(0);\n                }\n                setSuccessMessegeState(false)\n                \n            })\n        }\n\n    }\n    return (\n        <form onSubmit={orderCartHandler}>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Price</th>\n                        <th>Image</th>\n                        <th>Quantity</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        cartCtx.items.map((cat) => {\n                            return (\n                                <tr>\n                                    <td>{cat.name}</td>\n                                    <td>{cat.price}</td>\n                                    <td><img height='100px' width='200px' src={cat.image} /></td>\n                                    <td>{cat.quantity}</td>\n                                </tr>\n                            )\n                        })\n\n                    }</tbody>\n            </table>\n            <h3>Grand Total = {cartCtx.totalAmount}</h3>\n            <button onClick={closeCartHandler}>Close</button>\n            <button type=\"submit\">Order</button>\n        </form>\n    )\n}\n\nexport default Cart","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/ShowNotSIgnIn.js",[],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Orders.js",["101","102"],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/SuccessOrder.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":140,"column":41,"nodeType":"113","endLine":140,"endColumn":93},{"ruleId":"114","severity":1,"message":"115","line":8,"column":7,"nodeType":"116","endLine":8,"endColumn":9,"suggestions":"117"},{"ruleId":"107","severity":1,"message":"118","line":19,"column":10,"nodeType":"109","messageId":"110","endLine":19,"endColumn":21},{"ruleId":"107","severity":1,"message":"119","line":19,"column":23,"nodeType":"109","messageId":"110","endLine":19,"endColumn":37},{"ruleId":"111","severity":1,"message":"112","line":177,"column":19,"nodeType":"113","endLine":177,"endColumn":71},{"ruleId":"114","severity":1,"message":"120","line":10,"column":7,"nodeType":"116","endLine":10,"endColumn":9,"suggestions":"121"},{"ruleId":"107","severity":1,"message":"122","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"122","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"122","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"123","line":39,"column":11,"nodeType":"109","messageId":"110","endLine":39,"endColumn":23},{"ruleId":"107","severity":1,"message":"124","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":81,"column":41,"nodeType":"113","endLine":81,"endColumn":93},{"ruleId":"107","severity":1,"message":"125","line":59,"column":9,"nodeType":"109","messageId":"110","endLine":59,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":141,"column":27,"nodeType":"113","endLine":141,"endColumn":81},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'CartProvider' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.catId' and 'props.catName'. Either include them or remove the dependency array. If 'setName' needs the current value of 'props.catName', you can also switch to useReducer instead of useState and read 'props.catName' in the reducer.","ArrayExpression",["128"],"'sureDelete2' is assigned a value but never used.","'setSureDelete2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.catId', 'props.catName', and 'props.catPrice'. Either include them or remove the dependency array. If 'setName' needs the current value of 'props.catName', you can also switch to useReducer instead of useState and read 'props.catName' in the reducer.",["129"],"'useEffect' is defined but never used.","'handleChange' is assigned a value but never used.","'useReducer' is defined but never used.","'detailTable' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [props.catId, props.catName]",{"range":"134","text":"135"},"Update the dependencies array to be: [props.catId, props.catName, props.catPrice]",{"range":"136","text":"137"},[232,234],"[props.catId, props.catName]",[308,310],"[props.catId, props.catName, props.catPrice]"]