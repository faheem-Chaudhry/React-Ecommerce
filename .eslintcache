[{"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/index.js":"1","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/App.js":"2","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Home.js":"3","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Header.js":"4","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Categories/Categories.js":"5","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Categories/AddCategories.js":"6","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Categories/UpdateCategory.js":"7","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Products/Products.js":"8","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Products/AddProduct.js":"9","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Products/UpdateProduct.js":"10","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Login.js":"11","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/LoginPage.js":"12","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/SignUp.js":"13","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/store/CartProvider.js":"14","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/store/cart-context.js":"15","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Cart.js":"16","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/ShowNotSIgnIn.js":"17","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Orders.js":"18","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/SuccessOrder.js":"19","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/AdminHome.js":"20","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/AdminHeader.js":"21","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/OrderDetail.js":"22","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/hooks/useAuth.js":"23","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/RequireAuth.js":"24"},{"size":223,"mtime":1691499653488,"results":"25","hashOfConfig":"26"},{"size":5109,"mtime":1691671067520,"results":"27","hashOfConfig":"26"},{"size":6087,"mtime":1691757525909,"results":"28","hashOfConfig":"26"},{"size":2362,"mtime":1691732068957,"results":"29","hashOfConfig":"26"},{"size":4413,"mtime":1691582926908,"results":"30","hashOfConfig":"26"},{"size":2001,"mtime":1691582894992,"results":"31","hashOfConfig":"26"},{"size":2472,"mtime":1691582755994,"results":"32","hashOfConfig":"26"},{"size":6467,"mtime":1691582946976,"results":"33","hashOfConfig":"26"},{"size":3593,"mtime":1691676411700,"results":"34","hashOfConfig":"26"},{"size":3258,"mtime":1691580365340,"results":"35","hashOfConfig":"26"},{"size":2877,"mtime":1691675254305,"results":"36","hashOfConfig":"26"},{"size":3085,"mtime":1691668808239,"results":"37","hashOfConfig":"26"},{"size":2483,"mtime":1691560998048,"results":"38","hashOfConfig":"26"},{"size":2129,"mtime":1691674713066,"results":"39","hashOfConfig":"26"},{"size":315,"mtime":1691674235522,"results":"40","hashOfConfig":"26"},{"size":3063,"mtime":1691674917959,"results":"41","hashOfConfig":"26"},{"size":577,"mtime":1691652824714,"results":"42","hashOfConfig":"26"},{"size":5414,"mtime":1691587149162,"results":"43","hashOfConfig":"26"},{"size":446,"mtime":1691653450990,"results":"44","hashOfConfig":"26"},{"size":1114,"mtime":1691569689228,"results":"45","hashOfConfig":"26"},{"size":1291,"mtime":1691668647746,"results":"46","hashOfConfig":"26"},{"size":2361,"mtime":1691589559975,"results":"47","hashOfConfig":"26"},{"size":171,"mtime":1691664870704,"results":"48","hashOfConfig":"26"},{"size":703,"mtime":1691672177414,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"wr0gzi",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"52"},"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/index.js",[],["114","115"],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/App.js",["116","117","118","119","120","121"],"import React, { useState, useContext } from \"react\";\nimport LoginPage from \"./components/LoginPage\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport CartProvider from \"./store/CartProvider\";\nimport AdminHome from \"./components/AdminHome\";\nimport AdminHeader from \"./components/AdminHeader\";\nimport Categories from \"./components/Categories/Categories\";\nimport Products from \"./components/Products/Products\";\nimport Orders from \"./components/Orders\";\nimport AddProduct from \"./components/Products/AddProduct\";\nimport UpdateProduct from \"./components/Products/UpdateProduct\";\nimport AddCategories from \"./components/Categories/AddCategories\";\nimport UpdateCategory from \"./components/Categories/UpdateCategory\";\nimport SuccessOrder from \"./components/SuccessOrder\";\nimport ShowNotSignIn from \"./components/ShowNotSIgnIn\";\nimport Header from \"./components/Header\";\nimport Cart from \"./components/Cart\";\nimport useAuth from \"./hooks/useAuth\";\nimport CartContext from \"./store/cart-context\";\nimport RequireAuth from \"./components/RequireAuth\";\nimport { Route, Routes } from \"react-router-dom\";\nimport OrderDetail from \"./components/OrderDetail\";\nfunction App() {\n  const cartCtx = useAuth()\n  const [isLogin, setIsLogin] = useState(false);\n  const [adminLogin, setadminLogin] = useState(false);\n  const [isSignUp, setISSignUp] = useState(false);\n  const [fromLogin, setFromLogin] = useState(false);\n  const [cartToLogin, setCartToLogin] = useState(false);\n  let [cartCount, setCartCount] = useState(0);\n  const admin = JSON.parse(localStorage.getItem('admin'));\n  console.log(isLogin);\n  const setLogin = (val) => {\n    setIsLogin(val);\n  };\n  console.log(\"cartToLogin\", cartToLogin);\n  return (\n    <div>\n      <CartProvider>\n        <Routes>\n          <Route\n            path=\"/signup\"\n            element={<SignUp isSignUp={setISSignUp} />}\n          ></Route>\n          <Route\n            path=\"/login\"\n            element={\n              <Login\n                setAdminLogin={setadminLogin}\n                setIsLogin={setLogin}\n                isSignUp={setISSignUp}\n                setFromLogin={setFromLogin}\n              />\n            }\n          />\n          <Route\n            path=\"/admin-login\"\n            element={\n              <LoginPage setIsLogin={setLogin} adminLogin={setadminLogin} />\n            }\n          />\n          {/* </Routes> */}\n\n          {/* <Routes> */}\n          \n\n          <Route element={<RequireAuth />}>\n          <Route path=\"admin\" element={<AdminHeader />}>\n            <Route index element={<AdminHome />}></Route>\n\n            <Route path=\"categories\">\n              <Route index element={<Categories />} />\n              <Route path=\"add\" element={<AddCategories />} />\n              <Route path=\"update\">\n                <Route path=\":cate_id\" element={<UpdateCategory />} />\n              </Route>\n            </Route>\n\n            <Route path=\"products\">\n              <Route index element={<Products />} />\n              <Route path=\"add\" element={<AddProduct />} />\n              <Route path=\"update\">\n                <Route path=\":prod_id\" element={<UpdateProduct />} />\n              </Route>\n            </Route>\n\n            <Route path=\"orders\" >\n              <Route index element={<Orders />}/>\n              <Route path='detail'>\n                <Route path=':detail_id' element={<OrderDetail />}/>\n              </Route>\n            </Route>\n\n          </Route>\n          </Route>\n          {/* </Routes> */}\n\n          {/* <Routes> */}\n\n          <Route path=\"/\" >\n            <Route index element={<Home\n                setIsLogin={setLogin}\n                checkAdmin={adminLogin}\n                fromLogin={fromLogin}\n                checkCartToLogin={cartToLogin}\n                cartToLogin={setCartToLogin}\n                cartCount={cartCount}\n                setCartCount={setCartCount}\n              />}/>\n            <Route path='cart' >\n              <Route index element={<Cart />}/>\n              <Route path='notSignIn' element={<ShowNotSignIn />}/>\n              <Route path='successOrder' element={<SuccessOrder />}/>\n            </Route>  \n          </Route>\n\n        </Routes>\n        {/* {isSignUp && <SignUp isSignUp={setISSignUp} />} */}\n        {/* {isLogin && !adminLogin && !isSignUp && (\n            <Login\n              setAdminLogin={setadminLogin}\n              setIsLogin={setLogin}\n              isSignUp={setISSignUp}\n              setFromLogin={setFromLogin}\n            />\n          )} */}\n\n        {/* {isLogin && adminLogin && (\n            <LoginPage setIsLogin={setLogin} adminLogin={setadminLogin} />\n          )} */}\n\n        {/* {!isLogin && (\n            <Home\n              setIsLogin={setLogin}\n              checkAdmin={adminLogin}\n              fromLogin={fromLogin}\n              checkCartToLogin={cartToLogin}\n              cartToLogin={setCartToLogin}\n              cartCount={cartCount}\n              setCartCount={setCartCount}\n            />\n          )} */}\n      </CartProvider>\n    </div>\n  );\n}\n\nexport default App;\n","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Home.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Header.js",[],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Categories/Categories.js",["138"],"import React, { useEffect, useState } from \"react\";\nimport AddCategories from \"./AddCategories\";\nimport UpdateCategory from \"./UpdateCategory\";\nimport { Outlet, useNavigate, } from \"react-router-dom\";\n\nconst Categories = (props) => {\n    const navigate = useNavigate();\n    const [categories, setCategories] = useState([]);\n    const [cateButton, setcateButton] = useState(false)\n     const [updateCategories, setupdateCategories] = useState(false)\n     const [updateItem, setUpdateItem] = useState({id:'',name:''});\n     const [isdelete, setIsDelete] = useState(false)\n     const [sureDelete, setSureDelete] = useState(false);\n     const [deleteId, setDeleteId] = useState('')\n    useEffect(() => {\n        async function fetchData() {\n            setIsDelete(false)\n            const response = await fetch('https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/categories.json');\n            const data = await response.json();\n            const DATA = [];\n            for (const key in data) {\n                DATA.push({\n                    id: key,\n                    name: data[key]\n\n                })\n            }\n            setCategories(DATA);\n\n\n        }\n        fetchData()\n    }, [cateButton,updateCategories, isdelete])\n    const addCategoriesHandler = () => {\n        setcateButton(true)\n        navigate('add')\n    }\n    const handleDelete = (catId) => {\n        setSureDelete(true);\n        setDeleteId(catId);\n        // fetch(`https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/categories/${catId}.json`, {\n        //     method: 'DELETE',\n        // }).then(() => setIsDelete(true));\n        // .then((data) => {\n        //   console.log('Product deleted successfully:', data);\n        //   // Update the product list after successful deletion\n        //   setProducts((prevProducts) => prevProducts.filter((product) => product.id !== productId));\n        // })\n        // .catch((error) => {\n        //   console.error('Error deleting product:', error);\n        // });\n    }\n    const handleUpdate = (id, name) => {\n        console.log('update',id,name)\n        setUpdateItem({id:id,name:name})\n        navigate(`update/${id}`)\n      //  setupdateCategories(true)\n    //    return ( updateCategories && <UpdateCategory catId={id} catName={name} /> )\n    }\n    const sureDeleteHandler = () => {\n        fetch(\n          `https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/categories/${deleteId}.json`,\n          {\n            method: \"DELETE\",\n          }\n        ).then(() => setIsDelete(true));\n       // setSureDelete2(false);\n        setSureDelete(false)\n     //   setSureDelete2(true);\n        \n      };\n      const cancelDeleteHandler = () => {\n      //  setSureDelete2(false);\n        setSureDelete(false)\n      };\n    return (\n        <React.Fragment>\n            <h2>Categories list</h2>\n            {sureDelete && (\n                  <div>\n                    <p>Are you sure to want to delete</p>\n                    <button onClick={sureDeleteHandler}>yes</button>\n                    <button onClick={cancelDeleteHandler}>no</button>\n                  </div>\n                )}\n            {cateButton && <AddCategories setCatButton={setcateButton} />}\n            <table>\n                <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>Delete</th>\n                    <th>Update</th>\n                </tr>\n                <tbody>\n                    {\n                        categories.map((cat) => {\n                            return (\n                                <tr>\n                                    <td>{cat.id}</td>\n                                    <td>{cat.name}</td>\n                                    <td><button onClick={() => handleDelete(cat.id)}>Delete</button></td>\n                                    <td><button onClick={() => handleUpdate(cat.id, cat.name)}>Update</button></td>\n                                </tr>\n\n                                // <li>{cat.id}   {cat.name}</li>\n                            )\n                        })\n\n                    }</tbody>\n            </table>\n            <button onClick={addCategoriesHandler} >Add categories</button>\n             {updateCategories && <UpdateCategory catId={updateItem.id} catName={updateItem.name} updateState={setupdateCategories}/>} \n        </React.Fragment>\n    )\n};\n\nexport default Categories","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Categories/AddCategories.js",[],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Categories/UpdateCategory.js",["139"],"import React, {useEffect, useState} from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst UpdateCategory = (props) =>{\n    const navigate = useNavigate();\n    const {cate_id} = useParams();\n    const [Name, setName] = useState('');\n    useEffect(()=>{\n        async function fetchData() {\n            const response = await fetch(\n              \"https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/categories.json\"\n            );\n            const data = await response.json();\n            \n            \n            for (const key in data) {\n              if (key === cate_id) {\n                setName(data[key])\n              }\n            }\n            \n          }\n          fetchData();\n        //console.log(props.catName,props.catId)\n        //setName(props.catName)\n    },[])\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'id') {\n        //    setId(value);\n        } else if (name === 'Name') {\n            setName(value);\n        }\n    };\n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        fetch(`https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/categories/${cate_id}.json`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(Name),\n          }).then(()=>{\n            setName('');\n            //props.updateState(false);\n            navigate(-1)\n          })\n    }\n    return(\n        <React.Fragment>\n            <h2>Update Category</h2>\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"id\">ID:</label>\n                <input\n                    type=\"text\"\n                    id=\"id\"\n                    name=\"id\"\n                    value={cate_id}\n                    onChange={handleInputChange}\n                    readOnly\n                />\n            </div>\n            <div>\n                <label htmlFor=\"Name\">Category Name:</label>\n                <input\n                    type=\"Name\"\n                    id=\"Name\"\n                    name=\"Name\"\n                    value={Name}\n                    onChange={handleInputChange}\n                    required\n                />\n            </div>\n            <div>\n                <button type=\"submit\">Update</button>\n            </div>\n        </form>\n    </React.Fragment>\n    )\n}\n\nexport default UpdateCategory","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Products/Products.js",["140","141","142"],"import React, { useEffect, useState } from \"react\";\nimport AddProduct from \"./AddProduct\";\nimport UpdateProduct from \"./UpdateProduct\";\nimport { Outlet, useNavigate, } from \"react-router-dom\";\n\nconst Products = (props) => {\n  const navigate = useNavigate();\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [cateButton, setcateButton] = useState(false);\n  const [updateCategories, setupdateCategories] = useState(false);\n  const [updateItem, setUpdateItem] = useState({\n    id: \"\",\n    name: \"\",\n    price: \"\",\n    image: \"\",\n    category: \"\",\n  });\n  const [isdelete, setIsDelete] = useState(false);\n  const [sureDelete, setSureDelete] = useState(false);\n  const [sureDelete2, setSureDelete2] = useState(false);\n  const [deleteId, setDeleteId] = useState('');\n  useEffect(() => {\n    async function fetchDataCategories() {\n      setIsDelete(false);\n      const response = await fetch(\n        \"https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/categories.json\"\n      );\n      const data = await response.json();\n      const DATA = [];\n      for (const key in data) {\n        DATA.push({\n          id: key,\n          name: data[key],\n        });\n      }\n      setCategories(DATA);\n    }\n    fetchDataCategories();\n\n    //-----------------------------------Products-------------------------------\n\n    async function fetchData() {\n      setIsDelete(false);\n      const response = await fetch(\n        \"https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/products.json\"\n      );\n      const data = await response.json();\n      const DATA = [];\n      for (const key in data) {\n        DATA.push({\n          id: key,\n          name: data[key].name,\n          image: data[key].image,\n          price: data[key].price,\n          category: data[key].category,\n        });\n      }\n      setProducts(DATA);\n    }\n    fetchData();\n  }, [cateButton, updateCategories, isdelete]);\n  const addCategoriesHandler = () => {\n    setcateButton(true);\n    navigate('add')\n  };\n  const handleDelete = (catId) => {\n    setSureDelete(true);\n    setDeleteId(catId);\n    // if (sureDelete2 === true) {\n    //   fetch(\n    //     `https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/products/${catId}.json`,\n    //     {\n    //       method: \"DELETE\",\n    //     }\n    //   ).then(() => setIsDelete(true));\n    //   setSureDelete2(false);\n    //   setSureDelete(false)\n    // }\n    // else{\n    //  //   setSureDelete(false);\n    // }\n  };\n  const handleUpdate = (id, name, price, image, category) => {\n    console.log(\"update\", id, name);\n    setUpdateItem({\n      id: id,\n      name: name,\n      price: price,\n      image: image,\n      category: category,\n    });\n   // setupdateCategories(true);\n    navigate(`update/${id}`)\n  };\n\n  const handleChange = (event) => {\n    console.log(event.target.value);\n    async function fetchData() {\n      setIsDelete(false);\n      const response = await fetch(\n        \"https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/products.json\"\n      );\n      const data = await response.json();\n      const DATA = [];\n      if (event.target.value === \"All\") {\n        for (const key in data) {\n          DATA.push({\n            name: data[key].name,\n            image: data[key].image,\n            price: data[key].price,\n            category: data[key].category,\n          });\n        }\n      }\n      for (const key in data) {\n        if (data[key].category === event.target.value) {\n          DATA.push({\n            name: data[key].name,\n            image: data[key].image,\n            price: data[key].price,\n            category: data[key].category,\n          });\n        }\n      }\n      setProducts(DATA);\n    }\n    fetchData();\n  };\n  const sureDeleteHandler = () => {\n    fetch(\n      `https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/products/${deleteId}.json`,\n      {\n        method: \"DELETE\",\n      }\n    ).then(() => setIsDelete(true));\n   // setSureDelete2(false);\n    setSureDelete(false)\n //   setSureDelete2(true);\n    \n  };\n  const cancelDeleteHandler = () => {\n  //  setSureDelete2(false);\n    setSureDelete(false)\n  };\n  return (\n    <React.Fragment>\n      <h2>Products list</h2>\n         {sureDelete && (\n                  <div>\n                    <p>Are you sure to want to delete</p>\n                    <button onClick={sureDeleteHandler}>yes</button>\n                    <button onClick={cancelDeleteHandler}>no</button>\n                  </div>\n                )}\n      {cateButton && <AddProduct categories={categories} setCatButton={setcateButton} />}\n      <select onChange={handleChange}>\n        <option value=\"All\">All</option>\n        {categories.map((option) => (\n          <option key={option.name} value={option.name}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      <table>\n        <tr>\n          <th>Name</th>\n          <th>Price</th>\n          <th>Category</th>\n          <th>Image</th>\n          <th>delete</th>\n          <th>update</th>\n        </tr>\n        <tbody>\n          {products.map((cat) => {\n            return (\n              <tr>\n                <td>{cat.name}</td>\n                <td>{cat.price}</td>\n                <td>{cat.category}</td>\n                <td>\n                  <img height=\"100px\" width=\"200px\" src={cat.image} />\n                </td>\n                <td>\n                  <button onClick={() => handleDelete(cat.id)}>Delete</button>\n                </td>\n               \n                <td>\n                  <button\n                    onClick={() =>\n                      handleUpdate(\n                        cat.id,\n                        cat.name,\n                        cat.price,\n                        cat.image,\n                        cat.category\n                      )\n                    }\n                  >\n                    Update\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <button onClick={addCategoriesHandler}>Add Products</button>\n      {updateCategories && (\n        <UpdateProduct\n          catId={updateItem.id}\n          catName={updateItem.name}\n          catPrice={updateItem.price}\n          catImage={updateItem.image}\n          catCategory={updateItem.category}\n          updateState={setupdateCategories}\n        />\n      )}\n      <Outlet/>\n    </React.Fragment>\n  );\n};\n\nexport default Products;\n","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Products/AddProduct.js",[],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Products/UpdateProduct.js",["143"],"import React, {useState, useEffect} from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst UpdateProduct = (props) =>{\n    const navigate = useNavigate();\n    const {prod_id} = useParams();\n    const [Name, setName] = useState('');\n    const [Price, setPrice] = useState('');\n    const [Image, setImage] = useState('')\n    const [Category, setCategory] = useState('')\n    useEffect(()=>{\n        async function fetchData() {\n            const response = await fetch(\n              \"https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/products.json\"\n            );\n            const data = await response.json();\n            \n            \n            for (const key in data) {\n              if (key === prod_id) {\n                setName(data[key].name)\n                setPrice(data[key].price)\n                setCategory(data[key].category)\n                setImage(data[key].image)\n              }\n            }\n            \n          }\n          fetchData();\n        console.log(props.catName,props.catId)\n        // setName(props.catName)\n        // setPrice(props.catPrice)\n    },[])\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'Price') {\n            setPrice(value);\n        } else if (name === 'Name') {\n            setName(value);\n        }\n    };\n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        fetch(`https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/products/${prod_id}.json`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({name:Name, price: Price, image: Image, category: Category}),\n          }).then(()=>{\n            setName('');\n            setPrice('')\n            setImage('')\n            setCategory('')\n            navigate(-1)\n            //props.updateState(false);\n          })\n    }\n    return(\n        <React.Fragment>\n        <form onSubmit={handleSubmit}>\n            <h2>Update Product</h2>\n            <div>\n                <label htmlFor=\"id\">ID:</label>\n                <input\n                    type=\"text\"\n                    id=\"id\"\n                    name=\"id\"\n                    value={prod_id}\n                    onChange={handleInputChange}\n                    readOnly\n                />\n            </div>\n            <div>\n                <label htmlFor=\"Name\">Product Name:</label>\n                <input\n                    type=\"text\"\n                    id=\"Name\"\n                    name=\"Name\"\n                    value={Name}\n                    onChange={handleInputChange}\n                    required\n                />\n            </div>\n            <div>\n                <label htmlFor=\"Price\">Product Price:</label>\n                <input\n                    type=\"Text\"\n                    id=\"Price\"\n                    name=\"Price\"\n                    value={Price}\n                    onChange={handleInputChange}\n                    required\n                />\n            </div>\n            <div>\n                <button type=\"submit\">Update</button>\n            </div>\n        </form>\n    </React.Fragment>\n    )\n}\n\nexport default UpdateProduct","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Login.js",["144"],"import React, { useEffect, useState, useContext } from \"react\";\nimport CartContext from \"../store/cart-context\";\nimport { useNavigate, Link } from \"react-router-dom\";\nconst Login = (props) => {\n  const navigate = useNavigate();\n  const cartCtx = useContext(CartContext)\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Event handler for input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    if (name === 'username') {\n      setUsername(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  // Event handler for form submission\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // let email;\n    // let pass;\n    async function fetchData() {\n      const response = await fetch('https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/users.json');\n      const data = await response.json();\n      for (const key in data) {\n        if (data[key].email === username && data[key].password === password) {\n          console.log('ok');\n          props.setIsLogin(false);\n          props.setFromLogin(true);\n          cartCtx.addEmail(username);\n          if(cartCtx.items.length === 0){\n            navigate('/')\n          }\n          else{\n            navigate('/cart')\n          }\n          \n        }\n\n      }\n      // email=data['email'];\n      // pass=data['password'];\n      // console.log(email)\n\n    }\n    fetchData().then(() => {\n      console.log('Username:', username);\n      console.log('Password:', password);\n     \n      setUsername('');\n      setPassword('');\n    })\n\n\n  };\n  const handleChange = () => {\n    navigate('/admin-login')\n    props.setAdminLogin(true);\n  }\n  const signUpHandler = () =>{\n    navigate('/signup')\n    props.isSignUp(true);\n  }\n  \n  return (\n    <div>\n      <h2>Login</h2>\n      <input type=\"checkbox\"\n        id=\"admin\"\n        name=\"admin\"\n        value=\"admin\"\n        onChange={handleChange} />\n      <label for=\"admin\"> login as admin</label><br></br>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={username}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <button type=\"submit\">Login</button>\n          <button onClick={signUpHandler}>SignUp</button>\n        </div>\n      </form>\n      <Link to='/'>Go to Home</Link>\n    </div>\n  );\n}\n\nexport default Login","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/LoginPage.js",["145"],"import React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CartContext from '../store/cart-context';\n\nconst LoginPage = (props) => {\n  const cartCtx = useContext(CartContext);\n  const navigate = useNavigate();\n  // let email;\n  // let pass;\n  // useEffect(() => {\n\n  //   async function fetchData() {\n  //     const response = await fetch('https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/admin.json');\n  //     const data = await response.json();\n  //     email = data['email'];\n  //     pass = data['password'];\n  //     console.log(email)\n\n  //   }\n  //   fetchData()\n  // }, [])\n  // State to hold the user input for username and password\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Event handler for input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    if (name === 'username') {\n      setUsername(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  // Event handler for form submission\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let email;\n    let pass;\n    async function fetchData() {\n      const response = await fetch('https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/admin.json');\n      const data = await response.json();\n      email=data['email'];\n      pass=data['password'];\n      console.log(email)\n\n    }\n    fetchData().then(()=>{\n      console.log('Username:', username);\n      console.log('Password:', password);\n      console.log('email from server:', email);\n      console.log('Password from server:', pass);\n      if (email === username && pass === password) {\n        console.log('ok');\n        //props.setIsLogin(false);\n        cartCtx.setAdminLogin(true);\n        localStorage.setItem('admin',JSON.stringify(true))\n        console.log(localStorage)\n        navigate('/admin')\n      }\n      else {\n        console.log('not ok');\n       // props.setIsLogin(false);\n      }\n      setUsername('');\n      setPassword('');\n    })\n   \n\n  };\n  const loginHandler = () =>{\n    navigate('/login')\n    props.adminLogin(false)\n  }\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <h2>Welcome to admin panel</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={username}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <button type=\"submit\">Login</button>\n          <button onClick={loginHandler}>Login as user</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/SignUp.js",["146","147"],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst SignUp = (props) => {\n    const navigate = useNavigate();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    // Event handler for input changes\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'username') {\n            setUsername(value);\n        } else if (name === 'password') {\n            setPassword(value);\n        }\n    };\n\n    // Event handler for form submission\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        fetch('https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/users.json', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: username,\n                password: password\n            }),\n        }).then(() => {\n            setUsername('');\n            setPassword('');\n            props.isSignUp(false);\n            navigate('/login')\n           \n        })\n\n\n\n    };\n    const handleChange = () => {\n        props.setAdminLogin(true);\n    }\n    const loginHandler = () => {\n        props.isSignUp(false);\n        navigate('/login')\n    }\n    return (\n        <div>\n            <h2>SignUp </h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"username\">Username:</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        name=\"username\"\n                        value={username}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\">SignUp</button>\n                    <button onClick={loginHandler}>Login</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default SignUp","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/store/CartProvider.js",["148"],"import { useReducer, useState } from 'react';\n\nimport CartContext from './cart-context';\n\n\n\nconst CartProvider = (props) => {\n  const [cartItems, setCartItems] = useState([]);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [email, setEmail] = useState('');\n  const [adminLog, setAdminLog] = useState(false);\n  let [cartCount, setCartCount] = useState(0)\n\n\n  const addItemToCartHandler = (item, amount) => {\n    console.log(item.id)\n    const existingCartItemIndex = cartItems.findIndex(\n      (Item) => Item.id === item.id\n    );\n    const existingCartItem = cartItems[existingCartItemIndex];\n    if (existingCartItem) {\n      let updatedItems;\n      const updatedItem = {\n        ...existingCartItem,\n        quantity: existingCartItem.quantity + item.quantity\n      };\n      updatedItems = [...cartItems];\n      updatedItems[existingCartItemIndex] = updatedItem;\n      setCartItems(updatedItems)\n      setTotalAmount((prevAmount) => prevAmount + amount)\n    }\n    else {\n      setCartItems((prevCartItems) => [...prevCartItems, item]);\n      setTotalAmount((prevAmount) => prevAmount + amount)\n    }\n\n    console.log(cartItems)\n    console.log(totalAmount)\n    // dispatchCartAction({ type: 'ADD', item: item });\n  };\n\n  const addEmailHandler = (email) => {\n    setEmail(email);\n  }\n  const adminHandler = (value) => {\n    setAdminLog(value);\n  }\n  console.log('check admin value : ', adminLog)\n  const resetHandler = () =>{\n    setCartItems([])\n      setTotalAmount(0)\n      setCartCount(0)\n  }\n  const countHandler = () => {\n    setCartCount(cartCount+1)\n  }\n  const cartContext = {\n    cartCount: cartCount,\n    adminLogin: adminLog,\n    items: cartItems,\n    totalAmount: totalAmount,\n    email: email,\n    setAdminLogin: adminHandler,\n    updateCartCount: countHandler,\n    addItem: addItemToCartHandler,\n    addEmail: addEmailHandler,\n    reset: resetHandler\n    // removeItem: removeItemFromCartHandler,\n  };\n  console.log('cartctx', cartContext.adminLogin)\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/store/cart-context.js",[],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Cart.js",["149","150","151"],"import React, { useContext, useState } from \"react\";\nimport CartContext from \"../store/cart-context\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Cart = (props) => {\n  const navigate = useNavigate();\n  const [successMessegeState, setSuccessMessegeState] = useState(false);\n  const cartCtx = useContext(CartContext);\n  let ctxemail = \"\";\n  const closeCartHandler = () => {\n    // props.showCart(false);\n    //props.setSuccessMessege(false);\n    setSuccessMessegeState(true);\n    navigate('/');\n    cartCtx.reset();\n    return;\n  };\n  const orderCartHandler = (event) => {\n    event.preventDefault();\n    if (cartCtx.email === \"\") {\n      console.log(\"if\");\n      navigate(\"notSignIn\");\n      //   props.setNotSignIn(true);\n      //  props.showCart(false);\n      //  props.setSuccessMessege(false);\n    } else {\n      console.log(\"else\");\n      const Items = [];\n      cartCtx.items.map((cat) => {\n        return Items.push({\n          name: cat.name,\n          price: cat.price,\n          image: cat.image,\n          quantity: cat.quantity,\n        });\n      });\n      fetch(\n        \"https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/orders.json\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email: cartCtx.email,\n            grandTotal: cartCtx.totalAmount,\n            details: Items.map((cat) => ({\n              name: cat.name,\n              price: cat.price,\n              image: cat.image,\n              quantity: cat.quantity,\n            })),\n          }),\n        }\n      ).then(() => {\n        navigate(\"successOrder\");\n        //  ctxemail = cartCtx.email;\n        cartCtx.reset();\n        //  cartCtx.email = ctxemail;\n        //  ctxemail = '';\n        // props.showCart(false);\n        // props.cartToLogin(false);\n        // if(successMessegeState === false){\n        // props.setSuccessMessege(true);\n        // cartCtx.reset();\n        // props.setCartCount(0);\n        // }\n        // setSuccessMessegeState(false)\n      });\n    }\n  };\n  return (\n    <React.Fragment>\n        <h1>My Cart</h1>\n      <form onSubmit={orderCartHandler}>\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Price</th>\n              <th>Image</th>\n              <th>Quantity</th>\n            </tr>\n          </thead>\n          <tbody>\n            {cartCtx.items.map((cat) => {\n              return (\n                <tr>\n                  <td>{cat.name}</td>\n                  <td>{cat.price}</td>\n                  <td>\n                    <img height=\"100px\" width=\"200px\" src={cat.image} />\n                  </td>\n                  <td>{cat.quantity}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <h3>Grand Total = {cartCtx.totalAmount}</h3>\n       \n        <button type=\"submit\">Order</button>\n      </form>\n      <button onClick={closeCartHandler}>Close</button>\n    </React.Fragment>\n  );\n};\n\nexport default Cart;\n","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/ShowNotSIgnIn.js",[],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/Orders.js",["152","153","154"],"import React, { useEffect, useState } from \"react\";\nimport OrderDetail from \"./OrderDetail\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Orders = (props) => {\n  const navigate = useNavigate();\n  const [order, setOrder] = useState([]);\n  const [detailId, setDetailId] = useState(\"\");\n  const [hideDetail, setHideDetail] = useState(\"\");\n  const [showDetails, setShowDetails] = useState(false);\n  const [onlyDetails, setOnlyDetails] = useState(false);\n  const [showOnce, setShowOnce] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\n        \"https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/orders.json\"\n      );\n      const data = await response.json();\n      console.log(data);\n      const DATA = [];\n      for (const key in data) {\n        DATA.push({\n          id: key,\n          email: data[key].email,\n          amount: data[key].grandTotal,\n          details: data[key].details,\n        });\n      }\n      console.log(DATA.details);\n      setOrder(DATA);\n    }\n    fetchData();\n  }, []);\n  console.log(\"Order: \", order);\n  console.log(\"order details\", order.details);\n\n  const detailsHandler = (Id) => {\n    navigate(`detail/${Id}`)\n    console.log(\"detailid\", detailId);\n    console.log(\"hideid\", hideDetail);\n    if (Id === hideDetail) {\n      console.log(\"true true\");\n      setDetailId(\"\");\n      setHideDetail(\"\");\n      setShowDetails(true);\n      setOnlyDetails(false);\n      setShowOnce(false);\n      return;\n    }\n    setHideDetail(Id);\n    console.log(\"detailId\", Id);\n    setDetailId(Id);\n    setShowDetails(false);\n    setOnlyDetails(true);\n    setShowOnce(true);\n    // if((detailId === hideDetail) && detailId !== ''){\n    //     console.log('true true')\n    //     setDetailId('');\n    //     setHideDetail('');\n    //     setShowDetails(true);\n    // }\n  };\n  const detailTable = (Id) => {};\n  return (\n    <React.Fragment>\n      <table border=\"2px\">\n        {!onlyDetails && <tr>\n          <th>Email</th>\n          <th>Grand Total</th>\n          <th>Details</th>\n        </tr>}\n        <tbody>\n          {order.map((cat) => {\n            return (\n              <tr>\n                {!onlyDetails && (\n                  <React.Fragment>\n                    {\" \"}\n                    <td>{cat.email}</td>\n                    <td>{cat.amount}</td>\n                    <td>\n                      <button\n                        onClick={() => {\n                          detailsHandler(cat.id);\n                        }}\n                      >\n                        Details\n                      </button>\n                    </td>\n                  </React.Fragment>\n                )}\n                {onlyDetails && hideDetail === cat.id?<tr> \n                       \n                       <td><b>Email: </b>{cat.email}</td>\n                        {console.log('india',showOnce)}\n                          <td><b>Grand Total: </b>{cat.amount}</td>\n                          <td>\n                            <button\n                              onClick={() => {\n                                detailsHandler(cat.id);\n                              }}\n                            >\n                              Details\n                            </button>\n                            {/* {setShowOnce(false)} */}\n                          </td></tr>:<tr></tr>\n                }\n                {!showDetails &&\n               \n                  cat.details.map((detail, index) => {\n                   \n                        // <React.Fragment>\n                        //   {console.log('pakistan')}\n                        //   <td>{cat.email}</td>\n                        //   <td>{cat.amount}</td>\n                        //   <td>\n                        //     <button\n                        //       onClick={() => {\n                        //         detailsHandler(cat.id);\n                        //       }}\n                        //     >\n                        //       Details\n                        //     </button>\n                        //   </td>\n                        // </React.Fragment>\n                     \n                    return detailId === cat.id ? (\n                        \n                      <tr>\n                        {/* <td>{cat.email}</td>\n                        {console.log('india',showOnce)}\n                          <td>{cat.amount}</td>\n                          <td>\n                            <button\n                              onClick={() => {\n                                detailsHandler(cat.id);\n                              }}\n                            >\n                              Details\n                            </button>\n                            \n                          </td> */}\n                        <td><b>Name: </b>{detail.name}</td>\n                        <td>\n                          <img height=\"50px\" width=\"100px\" src={detail.image} />\n                        </td>\n                        <td><b>Price: </b>{detail.price}</td>\n                        <td><b>Quantity: </b>{detail.quantity}</td>\n                      </tr>\n                    ) : (\n                      <tr></tr>\n                    );\n                    //  {setDetailId('')}\n                  })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </React.Fragment>\n  );\n};\nexport default Orders;\n","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/SuccessOrder.js",[],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/AdminHome.js",["155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],"import React, { useState, useRef, useContext, useEffect } from \"react\";\nimport AdminHeader from \"./AdminHeader\";\nimport Categories from \"./Categories/Categories\";\nimport Products from \"./Products/Products\";\nimport Orders from \"./Orders\";\nimport { Route, Routes, Outlet } from \"react-router-dom\";\n\nconst AdminHome = (props) => {\n  const [isCategories, setIsCategories] = useState(false);\n  const [isProducts, setIsProducts] = useState(false);\n  const [isOrders, setIsOrders] = useState(false);\n\n  const setCategories = (val) => {\n    setIsCategories(val);\n  };\n  const setProducts = (val) => {\n    setIsProducts(val);\n  };\n  return (\n    <React.Fragment>\n       {/* <AdminHeader /> */}\n        <h1>This is Admin Panel</h1>\n\n           \n           \n        {/* <Outlet /> */}\n        {/* <Routes>\n            <Route path=\"/admin/categories\" element={<Categories />}/>\n            <Route path=\"/admin/products\" element={<Products />}/>\n            <Route path=\"/admin/orders\" element={<Orders />}/>\n         \n        </Routes> */}\n      {/* </AdminHeader> */}\n    </React.Fragment>\n  );\n};\n\nexport default AdminHome;\n","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/AdminHeader.js",["171","172"],"import React, { useState, useEffect, useContext } from \"react\";\nimport \"./Header.css\";\nimport { Link, Outlet, useNavigate } from \"react-router-dom\";\nimport CartContext from \"../store/cart-context\";\n\nconst AdminHeader = (props) => {\n  const navigate = useNavigate();\n  const cartCtx = useContext(CartContext);\n  useEffect(()=>{\n    const admin = JSON.parse(localStorage.getItem('admin'));\n\n  },[])\n  const signoutHandler = () => {\n    cartCtx.setAdminLogin(false);\n    localStorage.clear();\n    navigate('/admin-login')\n  }\n  return (\n    <React.Fragment>\n      <header className=\"header-container\">\n        <h1>My Admin 123</h1>\n        <nav>\n          <ul>\n            <Link to=\"/admin/categories\">Categories</Link>\n            <Link to=\"/admin/products\">Products</Link>\n            <Link to=\"/admin/orders\">Orders</Link>\n            <button onClick={signoutHandler}>Signout</button>\n            {/* <button onClick={onClickHandlerCat}>Categories</button>\n          <button onClick={onClickHandlerProds}>Products</button>\n          <button onClick={onClickHandlerOrders}>Orders</button>\n          <button onClick={onClickHandlerSignout}>Sign out</button>         */}\n          </ul>\n        </nav>\n      </header>\n      <Outlet />\n    </React.Fragment>\n  );\n};\n\nexport default AdminHeader;\n","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/OrderDetail.js",["173","174"],"import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nconst OrderDetail = () => {\n  const navigate = useNavigate();\n  const { detail_id } = useParams();\n  const [order, setOrder] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\n        \"https://react-http-8f78d-default-rtdb.firebaseio.com/ecommerce/orders.json\"\n      );\n      const data = await response.json();\n      console.log(data);\n      const DATA = [];\n      for (const key in data) {\n        if (key === detail_id) {\n          DATA.push({\n            id: key,\n            email: data[key].email,\n            amount: data[key].grandTotal,\n            details: data[key].details,\n          });\n        }\n      }\n      console.log(DATA.details);\n      setOrder(DATA);\n    }\n    fetchData();\n  }, []);\n  const detailsHandler = () => {\n    navigate(-1);\n  };\n  return (\n    <React.Fragment>\n      <table border=\"2px\">\n        <tr>\n          <th>Email</th>\n          <th>Grand Total</th>\n          <th>Details</th>\n        </tr>\n        <tbody>\n          {order.map((cat) => {\n            return (\n              <tr>\n                <td>{cat.email}</td>\n                <td>{cat.amount}</td>\n                <td>\n                  <button\n                    onClick={() => {\n                      detailsHandler(cat.id);\n                    }}\n                  >\n                    Details\n                  </button>\n                </td>\n\n                {cat.details.map((detail, index) => {\n                  return (\n                    <tr>\n                      <td>\n                        <b>Name: </b>\n                        {detail.name}\n                      </td>\n                      <td>\n                        <img height=\"50px\" width=\"100px\" src={detail.image} />\n                      </td>\n                      <td>\n                        <b>Price: </b>\n                        {detail.price}\n                      </td>\n                      <td>\n                        <b>Quantity: </b>\n                        {detail.quantity}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </React.Fragment>\n  );\n};\n\nexport default OrderDetail;\n","/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/hooks/useAuth.js",[],"/home/celestials/Documents/React/03 React Basics & Working With Components/01-starting-setup/01-starting-setup/src/components/RequireAuth.js",["175","176","177","178"],"import React, {useEffect, useState} from \"react\";\nimport { useNavigate, Outlet, useLocation, Navigate } from \"react-router-dom\";\nimport useAuth from \"../hooks/useAuth\";\n\nconst RequireAuth = () => {\n     //const [isState, setIsState] = useState(false);\n  const location = useLocation();\n  const cartCtx = useAuth();\n  let admin = JSON.parse(localStorage.getItem('admin'));\n\n//   useEffect(()=>{\n//      const admin = JSON.parse(localStorage.getItem('admin'));\n//      console.log('useEffect',admin)\n//      setIsState(admin)\n//   },[])\n  //console.log('isState',isState)\n  return (\n    admin?<Outlet /> : <Navigate to='/admin-login' state={{from: location}} replace/>\n  )\n};\n\nexport default RequireAuth;\n",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":37},{"ruleId":"183","severity":1,"message":"187","line":18,"column":8,"nodeType":"185","messageId":"186","endLine":18,"endColumn":14},{"ruleId":"183","severity":1,"message":"188","line":21,"column":8,"nodeType":"185","messageId":"186","endLine":21,"endColumn":19},{"ruleId":"183","severity":1,"message":"189","line":26,"column":9,"nodeType":"185","messageId":"186","endLine":26,"endColumn":16},{"ruleId":"183","severity":1,"message":"190","line":29,"column":10,"nodeType":"185","messageId":"186","endLine":29,"endColumn":18},{"ruleId":"183","severity":1,"message":"191","line":33,"column":9,"nodeType":"185","messageId":"186","endLine":33,"endColumn":14},{"ruleId":"183","severity":1,"message":"192","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"193","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":16},{"ruleId":"183","severity":1,"message":"194","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":20},{"ruleId":"183","severity":1,"message":"195","line":7,"column":8,"nodeType":"185","messageId":"186","endLine":7,"endColumn":12},{"ruleId":"183","severity":1,"message":"196","line":8,"column":8,"nodeType":"185","messageId":"186","endLine":8,"endColumn":21},{"ruleId":"183","severity":1,"message":"197","line":9,"column":8,"nodeType":"185","messageId":"186","endLine":9,"endColumn":14},{"ruleId":"183","severity":1,"message":"198","line":10,"column":8,"nodeType":"185","messageId":"186","endLine":10,"endColumn":20},{"ruleId":"183","severity":1,"message":"199","line":16,"column":12,"nodeType":"185","messageId":"186","endLine":16,"endColumn":24},{"ruleId":"183","severity":1,"message":"200","line":17,"column":12,"nodeType":"185","messageId":"186","endLine":17,"endColumn":22},{"ruleId":"183","severity":1,"message":"201","line":18,"column":12,"nodeType":"185","messageId":"186","endLine":18,"endColumn":20},{"ruleId":"183","severity":1,"message":"202","line":21,"column":23,"nodeType":"185","messageId":"186","endLine":21,"endColumn":35},{"ruleId":"183","severity":1,"message":"203","line":22,"column":12,"nodeType":"185","messageId":"186","endLine":22,"endColumn":26},{"ruleId":"183","severity":1,"message":"204","line":22,"column":28,"nodeType":"185","messageId":"186","endLine":22,"endColumn":45},{"ruleId":"183","severity":1,"message":"205","line":23,"column":12,"nodeType":"185","messageId":"186","endLine":23,"endColumn":21},{"ruleId":"183","severity":1,"message":"206","line":24,"column":21,"nodeType":"185","messageId":"186","endLine":24,"endColumn":33},{"ruleId":"207","severity":1,"message":"208","line":141,"column":41,"nodeType":"209","endLine":141,"endColumn":93},{"ruleId":"183","severity":1,"message":"210","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":26,"column":7,"nodeType":"213","endLine":26,"endColumn":9,"suggestions":"214"},{"ruleId":"183","severity":1,"message":"215","line":21,"column":10,"nodeType":"185","messageId":"186","endLine":21,"endColumn":21},{"ruleId":"183","severity":1,"message":"216","line":21,"column":23,"nodeType":"185","messageId":"186","endLine":21,"endColumn":37},{"ruleId":"207","severity":1,"message":"208","line":182,"column":19,"nodeType":"209","endLine":182,"endColumn":71},{"ruleId":"211","severity":1,"message":"217","line":33,"column":7,"nodeType":"213","endLine":33,"endColumn":9,"suggestions":"218"},{"ruleId":"183","severity":1,"message":"219","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"219","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"219","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"220","line":42,"column":11,"nodeType":"185","messageId":"186","endLine":42,"endColumn":23},{"ruleId":"183","severity":1,"message":"221","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":20},{"ruleId":"183","severity":1,"message":"222","line":7,"column":10,"nodeType":"185","messageId":"186","endLine":7,"endColumn":29},{"ruleId":"183","severity":1,"message":"223","line":9,"column":7,"nodeType":"185","messageId":"186","endLine":9,"endColumn":15},{"ruleId":"207","severity":1,"message":"208","line":92,"column":21,"nodeType":"209","endLine":92,"endColumn":73},{"ruleId":"183","severity":1,"message":"224","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":19},{"ruleId":"183","severity":1,"message":"225","line":63,"column":9,"nodeType":"185","messageId":"186","endLine":63,"endColumn":20},{"ruleId":"207","severity":1,"message":"208","line":145,"column":27,"nodeType":"209","endLine":145,"endColumn":81},{"ruleId":"183","severity":1,"message":"226","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":33},{"ruleId":"183","severity":1,"message":"184","line":1,"column":35,"nodeType":"185","messageId":"186","endLine":1,"endColumn":45},{"ruleId":"183","severity":1,"message":"219","line":1,"column":47,"nodeType":"185","messageId":"186","endLine":1,"endColumn":56},{"ruleId":"183","severity":1,"message":"227","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":19},{"ruleId":"183","severity":1,"message":"192","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"193","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":16},{"ruleId":"183","severity":1,"message":"197","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":14},{"ruleId":"183","severity":1,"message":"228","line":6,"column":10,"nodeType":"185","messageId":"186","endLine":6,"endColumn":15},{"ruleId":"183","severity":1,"message":"229","line":6,"column":17,"nodeType":"185","messageId":"186","endLine":6,"endColumn":23},{"ruleId":"183","severity":1,"message":"210","line":6,"column":25,"nodeType":"185","messageId":"186","endLine":6,"endColumn":31},{"ruleId":"183","severity":1,"message":"199","line":9,"column":10,"nodeType":"185","messageId":"186","endLine":9,"endColumn":22},{"ruleId":"183","severity":1,"message":"200","line":10,"column":10,"nodeType":"185","messageId":"186","endLine":10,"endColumn":20},{"ruleId":"183","severity":1,"message":"201","line":11,"column":10,"nodeType":"185","messageId":"186","endLine":11,"endColumn":18},{"ruleId":"183","severity":1,"message":"230","line":11,"column":20,"nodeType":"185","messageId":"186","endLine":11,"endColumn":31},{"ruleId":"183","severity":1,"message":"231","line":13,"column":9,"nodeType":"185","messageId":"186","endLine":13,"endColumn":22},{"ruleId":"183","severity":1,"message":"232","line":16,"column":9,"nodeType":"185","messageId":"186","endLine":16,"endColumn":20},{"ruleId":"183","severity":1,"message":"233","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"191","line":10,"column":11,"nodeType":"185","messageId":"186","endLine":10,"endColumn":16},{"ruleId":"211","severity":1,"message":"234","line":29,"column":6,"nodeType":"213","endLine":29,"endColumn":8,"suggestions":"235"},{"ruleId":"207","severity":1,"message":"208","line":65,"column":25,"nodeType":"209","endLine":65,"endColumn":79},{"ruleId":"183","severity":1,"message":"219","line":1,"column":16,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"233","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":35},{"ruleId":"183","severity":1,"message":"236","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":21},{"ruleId":"183","severity":1,"message":"189","line":8,"column":9,"nodeType":"185","messageId":"186","endLine":8,"endColumn":16},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'CartContext' is defined but never used.","'cartCtx' is assigned a value but never used.","'isSignUp' is assigned a value but never used.","'admin' is assigned a value but never used.","'Categories' is defined but never used.","'Products' is defined but never used.","'CartProvider' is defined but never used.","'Cart' is defined but never used.","'ShowNotSignIn' is defined but never used.","'Orders' is defined but never used.","'SuccessOrder' is defined but never used.","'isCategories' is assigned a value but never used.","'isProducts' is assigned a value but never used.","'isOrders' is assigned a value but never used.","'setNotSignIn' is assigned a value but never used.","'successMessege' is assigned a value but never used.","'setSuccessMessege' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setCartCount' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Outlet' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cate_id'. Either include it or remove the dependency array.","ArrayExpression",["239"],"'sureDelete2' is assigned a value but never used.","'setSureDelete2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'prod_id', 'props.catId', and 'props.catName'. Either include them or remove the dependency array.",["240"],"'useEffect' is defined but never used.","'handleChange' is assigned a value but never used.","'useReducer' is defined but never used.","'successMessegeState' is assigned a value but never used.","'ctxemail' is assigned a value but never used.","'OrderDetail' is defined but never used.","'detailTable' is assigned a value but never used.","'useRef' is defined but never used.","'AdminHeader' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'setIsOrders' is assigned a value but never used.","'setCategories' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'detail_id'. Either include it or remove the dependency array.",["241"],"'useNavigate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},"Update the dependencies array to be: [cate_id]",{"range":"248","text":"249"},"Update the dependencies array to be: [prod_id, props.catId, props.catName]",{"range":"250","text":"251"},"Update the dependencies array to be: [detail_id]",{"range":"252","text":"253"},[817,819],"[cate_id]",[1122,1124],"[prod_id, props.catId, props.catName]",[866,868],"[detail_id]"]